services:
  # Database for Clients Service
  clients-db:
    image: postgres:15
    container_name: microcommerce-clients-db
    environment:
      POSTGRES_DB: clients_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - clients_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d clients_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database for Products Service
  products-db:
    image: postgres:15
    container_name: microcommerce-products-db
    environment:
      POSTGRES_DB: products_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - products_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d products_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database for Orders Service
  orders-db:
    image: postgres:15
    container_name: microcommerce-orders-db
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - orders_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d orders_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Clients Service
  clients-service:
    build: ./clients-service
    container_name: microcommerce-clients
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://clients-db:5432/clients_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      clients-db:
        condition: service_healthy
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/clients"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Products Service
  products-service:
    build: ./products-service
    container_name: microcommerce-products
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://products-db:5432/products_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      products-db:
        condition: service_healthy
      clients-service:
        condition: service_healthy
    ports:
      - "8082:8080"

  # Orders Service
  orders-service:
    build: ./orders-service
    container_name: microcommerce-orders
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://orders-db:5432/orders_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      orders-db:
        condition: service_healthy
      clients-service:
        condition: service_healthy
      products-service:
        condition: service_healthy
    ports:
      - "8083:8080"

  # Database Admin Tool
  adminer:
    image: adminer
    container_name: microcommerce-adminer
    ports:
      - "8080:8080"
    depends_on:
      - clients-db
      - products-db
      - orders-db

volumes:
  clients_data:
  products_data:
  orders_data: